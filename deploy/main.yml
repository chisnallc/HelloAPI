AWSTemplateFormatVersion: "2010-09-09"
Transform: "AWS::Serverless-2016-10-31"
Resources:
  Lambda:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: HelloApi
      Handler: index.handler
      Runtime: nodejs12.x
      CodeUri: ../build-main-lambda
      AutoPublishAlias: live
      DeploymentPreference:
        Type: AllAtOnce
      Description: Lambda for API Gateway backend
      Role: !GetAtt [LambdaExecutionRole, Arn]
      MemorySize: 128
      Timeout: 600
  LambdaLogGroup:
    Type: "AWS::Logs::LogGroup"
    Properties:
      LogGroupName: "/aws/lambda/HelloApi"
      RetentionInDays: 30
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
      Policies:
        - PolicyName: CloudwatchLogs
          PolicyDocument:
            Statement:
              - Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:GetLogEvents
                  - logs:PutLogEvents
                Resource:
                  - !GetAtt [LambdaLogGroup, Arn]
                Effect: Allow
  LambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt Lambda.Arn
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ApiGateway}/*/*"

  ApiGateway:
    DependsOn: Lambda
    Type: 'AWS::ApiGateway::RestApi'
    Properties:
      Name: hello-api-gateway

  ApiGatewayDeployment:
    Type: 'AWS::ApiGateway::Deployment'
    Properties:
      RestApiId:
        Ref: ApiGateway
      Description: Automatically created by the RestApi construct
    DependsOn:
      - ApiGatewayResource
      - ApiGatewayMethod

  ApiGatewayStage:
    Type: 'AWS::ApiGateway::Stage'
    Properties:
      RestApiId:
        Ref: ApiGateway
      DeploymentId:
        Ref: ApiGatewayDeployment
      StageName: prod

  ApiGatewayResource:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      ParentId:
        'Fn::GetAtt':
          - ApiGateway
          - RootResourceId
      PathPart: home
      RestApiId:
        Ref: ApiGateway

  ApiGatewayMethod:
    DependsOn:
      - ApiGateway
      - Lambda
    Type: 'AWS::ApiGateway::Method'
    Properties:
      HttpMethod: GET
      ResourceId:
        Ref: ApiGatewayResource
      RestApiId:
        Ref: ApiGateway
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Sub:
            - arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaArn}/invocations
            - LambdaArn: !GetAtt Lambda.Arn

  MyAuthFunction:
    Type: AWS::Serverless::Function
    FunctionName: HelloApiAuthFunction
    Properties:
      CodeUri: ../build-auth-lambda
      Handler: index.handler
      Runtime: nodejs12.x
